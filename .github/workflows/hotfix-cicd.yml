# This is a basic workflow to help you get started with Actions
 
name: CICD Workflow 

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "feature/initial_development" branch
  push:
    branches: [ "feature/hotfix*" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
# Define variables
env:
  connected_app_id: ${{vars.connected_app_id}}
  connected_app_secret: ${{secrets.connected_app_secret}}
  anypoint_platform_nabs_business_grp_id: ${{vars.anypoint_platform_nabs_business_grp_id}}
  region: ${{vars.region}}
  mule_version: ${{vars.mule_version}}
  enable_objectstore_v2: ${{vars.enable_objectstore_v2}}
  enable_latest_runtime: ${{vars.enable_latest_runtime}}
  anypoint_platform_nabs_bg_client_id: ${{vars.anypoint_platform_nabs_bg_client_id}}
  anypoint_platform_nabs_bg_client_secret: ${{secrets.anypoint_platform_nabs_bg_client_secret}}
  anypoint_platform_config_analytics_agent_enabled: ${{vars.anypoint_platform_config_analytics_agent_enabled}}
  anypoint_platform_visualizer_layer: ${{vars.anypoint_platform_visualizer_layer}}
  keystore_password: ${{ secrets.keystore_password }}
  keystore_key_password: ${{ secrets.keystore_key_password }}
  http_request_port: ${{vars.http_request_port}}
  http_request_reconnection_frequency: ${{vars.http_request_reconnection_frequency}}
  http_request_reconnection_attempts: ${{vars.http_request_reconnection_attempts}}
  http_request_timeout: ${{vars.http_request_timeout}}
  mq_reconnection_frequency: ${{vars.mq_reconnection_frequency}}
  mq_reconnection_attempts: ${{vars.mq_reconnection_attempts}}
  system_time_zone: ${{vars.system_time_zone}}
  objectStore_ttl: ${{vars.objectStore_ttl}}
  objectStore_attempts: ${{vars.objectStore_attempts}}
  objectStore_frequency: ${{vars.objectStore_frequency}}
  dynatrace_trace_collector_url: ${{vars.dynatrace_trace_collector_url}}
  dynatrace_trace_collector_authorization: ${{secrets.dynatrace_trace_collector_authorization}}
  dynatrace_reconnection_attempts: ${{vars.dynatrace_reconnection_attempts}}
  dynatrace_reconnection_frequency: ${{vars.dynatrace_reconnection_frequency}}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    environment: QA
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      - name: Cache
        uses: actions/cache@v1.2.1
        with:
          # A list of files, directories, and wildcard patterns to cache and restore
          path: ~/.m2/repository
          # An explicit key for restoring and saving the cache
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }} 
          # An ordered list of keys to use for restoring stale cache if no cache hit occurred for key. Note `cache-hit` returns false in this case.
          restore-keys: | 
            ${{ runner.os }}-maven- 
      
      - name: Setup Java JDK
        uses: actions/setup-java@v1.4.4
        with:
          # The Java version to set up. Takes a whole or semver Java version. See examples of supported syntax in README file
          java-version: 8 # optional
          check-latest: true # optional
          distribution: adopt-hotspot

      - name: Add repo credentials
        uses: s4u/maven-settings-action@v2.8.0
        with:
          servers: |
            [{
               "id": "MuleRepository",
               "username": "${{vars.henryschein_nexus_username}}",
               "password": "${{secrets.henryschein_nexus_password}}"
            },
            {
               "id": "anypoint-exchange-v3",
               "username": "~~~Client~~~",
               "password": "${{vars.connected_app_id}}~?~${{secrets.connected_app_secret}}"
            }]
          
      - name: Print effective-settings (optional) 
        run: mvn help:effective-settings

      - name: Build with Maven 
        env:
          http_request_host: ${{ vars.http_request_host }}
          http_request_basePath: ${{ vars.http_request_basePath }}
          http_request_client_secret: ${{secrets.http_request_client_secret}}
          http_request_client_id: ${{vars.http_request_client_id}}
          mq_client_id: ${{vars.mq_client_id}}
          mq_client_secret: ${{secrets.mq_client_secret}}
          mq_us_destination: ${{vars.mq_us_destination}}
          mq_canada_destination: ${{vars.mq_canada_destination}}
          mq_url: ${{vars.mq_url}}
          api_id: ${{vars.api_id}}
          environment: ${{vars.environment}}
          service_name: ${{vars.service_name}}

        run: |
          echo -Dlistener.keystore.password="$keystore_password" -Dlistener.keystore.key.password="$keystore_key_password" -Dhttp.request.host="$http_request_host" -Dhttp.request.port="$http_request_port" -Dhttp.request.basePath="$http_request_basePath" -Dhttp.request.reconnection.frequency="$http_request_reconnection_frequency" -Dhttp.request.reconnection.attempts="$http_request_reconnection_attempts" -Dhttp.request.timeout="$http_request_timeout" -Dhttp.request.client.id="$http_request_client_id" -Dhttp.request.client.secret="$http_request_client_secret" -Dmq.client.id="$mq_client_id" -Dmq.client.secret="$mq_client_secret" -Dmq.reconnection.frequency="$mq_reconnection_frequency"  -Dmq.reconnection.attempts="$mq_reconnection_attempts" -Dmq.us.destination="$mq_us_destination" -Dmq.canada.destination="$mq_canada_destination" -Dapi.id="$api_id" -Danypoint.platform.client_id="$anypoint_platform_nabs_bg_client_id" -Danypoint.platform.client_secret="$anypoint_platform_nabs_bg_client_secret" -Danypoint.platform.config.analytics.agent.enabled="$anypoint_platform_config_analytics_agent_enabled" -Danypoint.platform.visualizer.layer="$anypoint_platform_visualizer_layer" -Denvironment="$environment" -Dsystem.time.zone="$system_time_zone" -Dservice.name="$service_name" -Ddynatrace.trace.collector.url="$dynatrace_trace_collector_url" -Ddynatrace.trace.collector.authorization="$dynatrace_trace_collector_authorization" -Ddynatrace.reconnection.attempts="$dynatrace_reconnection_attempts" -Ddynatrace.reconnection.frequency="$dynatrace_reconnection_frequency" -Dmq.url="$mq_url" -DobjectStore.ttl="$objectStore_ttl" -DobjectStore.attempts="$objectStore_attempts" -DobjectStore.frequency="$objectStore_frequency"
          
          mvn -B clean package --file pom.xml -Dlistener.keystore.password="$keystore_password" -Dlistener.keystore.key.password="$keystore_key_password" -Dhttp.request.host="$http_request_host" -Dhttp.request.port="$http_request_port" -Dhttp.request.basePath="$http_request_basePath" -Dhttp.request.reconnection.frequency="$http_request_reconnection_frequency" -Dhttp.request.reconnection.attempts="$http_request_reconnection_attempts" -Dhttp.request.timeout="$http_request_timeout" -Dhttp.request.client.id="$http_request_client_id" -Dhttp.request.client.secret="$http_request_client_secret" -Dmq.client.id="$mq_client_id" -Dmq.client.secret="$mq_client_secret" -Dmq.reconnection.frequency="$mq_reconnection_frequency"  -Dmq.reconnection.attempts="$mq_reconnection_attempts" -Dmq.us.destination="$mq_us_destination" -Dmq.canada.destination="$mq_canada_destination" -Dapi.id="$api_id" -Danypoint.platform.client_id="$anypoint_platform_nabs_bg_client_id" -Danypoint.platform.client_secret="$anypoint_platform_nabs_bg_client_secret" -Danypoint.platform.config.analytics.agent.enabled="$anypoint_platform_config_analytics_agent_enabled" -Danypoint.platform.visualizer.layer="$anypoint_platform_visualizer_layer" -Denvironment="$environment" -Dsystem.time.zone="$system_time_zone" -Dservice.name="$service_name" -Ddynatrace.trace.collector.url="$dynatrace_trace_collector_url" -Ddynatrace.trace.collector.authorization="$dynatrace_trace_collector_authorization" -Ddynatrace.reconnection.attempts="$dynatrace_reconnection_attempts" -Ddynatrace.reconnection.frequency="$dynatrace_reconnection_frequency" -Dmq.url="$mq_url" -DobjectStore.ttl="$objectStore_ttl" -DobjectStore.attempts="$objectStore_attempts" -DobjectStore.frequency="$objectStore_frequency" 


      - name: Stamp artifact file name with commit hash 
        run: | 
          artifactName1=$(ls target/*.jar | head -1) 
          commitHash=$(git rev-parse --short "$GITHUB_SHA") 
          artifactName2=$(ls target/*.jar | head -1 | sed "s/.jar/-$commitHash.jar/g")
          mv $artifactName1 $artifactName2

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.2
        with:
          # Artifact name
          name: artifacts
          # A file, directory or wildcard pattern that describes what to upload
          path: target/*.jar



  deploy-qa:
    needs: build 
    runs-on: ubuntu-latest
    environment: QA
    steps:
      - uses: actions/checkout@v3
      
      - name: Cache
        uses: actions/cache@v1.2.1
        with:
          # A list of files, directories, and wildcard patterns to cache and restore
          path: ~/.m2/repository
          # An explicit key for restoring and saving the cache
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }} 
          # An ordered list of keys to use for restoring stale cache if no cache hit occurred for key. Note `cache-hit` returns false in this case.
          restore-keys: | 
            ${{ runner.os }}-maven- 

      - name: Download a Build Artifact
        uses: actions/download-artifact@v2.1.1
        with:
          # Artifact name
          name: artifacts
          
      - name: Deploy to Sandbox
        env:
          http_request_host: ${{ vars.http_request_host }}
          http_request_basePath: ${{ vars.http_request_basePath }}
          http_request_client_secret: ${{secrets.http_request_client_secret}}
          http_request_client_id: ${{vars.http_request_client_id}}
          mq_client_id: ${{vars.mq_client_id}}
          mq_client_secret: ${{secrets.mq_client_secret}}
          mq_us_destination: ${{vars.mq_us_destination}}
          mq_canada_destination: ${{vars.mq_canada_destination}}
          mq_url: ${{vars.mq_url}}
          api_id: ${{vars.api_id}}
          environment: ${{vars.environment}}
          service_name: ${{vars.service_name}}
  
        
        run: |
          artifactName=$(ls *.jar | head -1)
          
          echo -Dmule.artifact=$artifactName -DmuleVersion="$mule_version" -DconnectedAppClientId="$connected_app_id" -Dbusiness_group_id="$anypoint_platform_nabs_business_grp_id" -Dregion="$region" -Dapplication_name="$service_name" -Dworkers="$no_of_workers" -DworkerType="$worker_type" -DobjectStore="$enable_objectstore_v2" -DapplyLatestRuntimePatch="$enable_latest_runtime" -DconnectedAppClientSecret="$connected_app_secret" -Dlistener.keystore.password="$keystore_password" -Dlistener.keystore.key.password="$keystore_key_password" -Dhttp.request.host="$http_request_host" -Dhttp.request.port="$http_request_port" -Dhttp.request.basePath="$http_request_basePath" -Dhttp.request.reconnection.frequency="$http_request_reconnection_frequency" -Dhttp.request.reconnection.attempts="$http_request_reconnection_attempts" -Dhttp.request.timeout="$http_request_timeout" -Dhttp.request.client.id="$http_request_client_id" -Dhttp.request.client.secret="$http_request_client_secret" -Dmq.client.id="$mq_client_id" -Dmq.client.secret="$mq_client_secret" -Dmq.reconnection.frequency="$mq_reconnection_frequency"  -Dmq.reconnection.attempts="$mq_reconnection_attempts" -Dmq.us.destination="$mq_us_destination" -Dmq.canada.destination="$mq_canada_destination" -Dapi.id="$api_id" -Danypoint.platform.client_id="$anypoint_platform_nabs_bg_client_id" -Danypoint.platform.client_secret="$anypoint_platform_nabs_bg_client_secret" -Danypoint.platform.config.analytics.agent.enabled="$anypoint_platform_config_analytics_agent_enabled" -Danypoint.platform.visualizer.layer="$anypoint_platform_visualizer_layer" -Denvironment="$environment" -Dsystem.time.zone="$system_time_zone" -Dservice.name="$service_name" -Ddynatrace.trace.collector.url="$dynatrace_trace_collector_url" -Ddynatrace.trace.collector.authorization="$dynatrace_trace_collector_authorization" -Ddynatrace.reconnection.attempts="$dynatrace_reconnection_attempts" -Ddynatrace.reconnection.frequency="$dynatrace_reconnection_frequency" -Dmq.url="$mq_url" -DobjectStore.ttl="$objectStore_ttl" -DobjectStore.attempts="$objectStore_attempts" -DobjectStore.frequency="$objectStore_frequency"
          
          mvn deploy -DmuleDeploy -e -Dmule.artifact=$artifactName -DmuleVersion="$mule_version" -DconnectedAppClientId="$connected_app_id" -Dbusiness_group_id="$anypoint_platform_nabs_business_grp_id" -Dregion="$region" -Dapplication_name="$service_name" -Dworkers="$no_of_workers" -DworkerType="$worker_type" -DobjectStore="$enable_objectstore_v2" -DapplyLatestRuntimePatch="$enable_latest_runtime" -DconnectedAppClientSecret="$connected_app_secret" -Dlistener.keystore.password="$keystore_password" -Dlistener.keystore.key.password="$keystore_key_password" -Dhttp.request.host="$http_request_host" -Dhttp.request.port="$http_request_port" -Dhttp.request.basePath="$http_request_basePath" -Dhttp.request.reconnection.frequency="$http_request_reconnection_frequency" -Dhttp.request.reconnection.attempts="$http_request_reconnection_attempts" -Dhttp.request.timeout="$http_request_timeout" -Dhttp.request.client.id="$http_request_client_id" -Dhttp.request.client.secret="$http_request_client_secret" -Dmq.client.id="$mq_client_id" -Dmq.client.secret="$mq_client_secret" -Dmq.reconnection.frequency="$mq_reconnection_frequency"  -Dmq.reconnection.attempts="$mq_reconnection_attempts" -Dmq.us.destination="$mq_us_destination" -Dmq.canada.destination="$mq_canada_destination" -Dapi.id="$api_id" -Danypoint.platform.client_id="$anypoint_platform_nabs_bg_client_id" -Danypoint.platform.client_secret="$anypoint_platform_nabs_bg_client_secret" -Danypoint.platform.config.analytics.agent.enabled="$anypoint_platform_config_analytics_agent_enabled" -Danypoint.platform.visualizer.layer="$anypoint_platform_visualizer_layer" -Denvironment="$environment" -Dsystem.time.zone="$system_time_zone" -Dservice.name="$service_name" -Ddynatrace.trace.collector.url="$dynatrace_trace_collector_url" -Ddynatrace.trace.collector.authorization="$dynatrace_trace_collector_authorization" -Ddynatrace.reconnection.attempts="$dynatrace_reconnection_attempts" -Ddynatrace.reconnection.frequency="$dynatrace_reconnection_frequency" -Dmq.url="$mq_url" -DobjectStore.ttl="$objectStore_ttl" -DobjectStore.attempts="$objectStore_attempts" -DobjectStore.frequency="$objectStore_frequency"  -DskipTests  

  deploy-prod:
    needs: deploy-qa 
    runs-on: ubuntu-latest
    environment: Production
    steps:
      - uses: actions/checkout@v3
      
      - name: Cache
        uses: actions/cache@v1.2.1
        with:
          # A list of files, directories, and wildcard patterns to cache and restore
          path: ~/.m2/repository
          # An explicit key for restoring and saving the cache
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }} 
          # An ordered list of keys to use for restoring stale cache if no cache hit occurred for key. Note `cache-hit` returns false in this case.
          restore-keys: | 
            ${{ runner.os }}-maven- 

      - name: Download a Build Artifact
        uses: actions/download-artifact@v2.1.1
        with:
          # Artifact name
          name: artifacts
          
      - name: Deploy to Sandbox
        env:
          http_request_host: ${{ vars.http_request_host }}
          http_request_basePath: ${{ vars.http_request_basePath }}
          http_request_client_secret: ${{secrets.http_request_client_secret}}
          http_request_client_id: ${{vars.http_request_client_id}}
          mq_client_id: ${{vars.mq_client_id}}
          mq_client_secret: ${{secrets.mq_client_secret}}
          mq_us_destination: ${{vars.mq_us_destination}}
          mq_canada_destination: ${{vars.mq_canada_destination}}
          mq_url: ${{vars.mq_url}}
          api_id: ${{vars.api_id}}
          environment: ${{vars.environment}}
          service_name: ${{vars.service_name}}

        run: |
          artifactName=$(ls *.jar | head -1)
          
          echo -Dmule.artifact=$artifactName -DmuleVersion="$mule_version" -DconnectedAppClientId="$connected_app_id" -Dbusiness_group_id="$anypoint_platform_nabs_business_grp_id" -Dregion="$region" -Dapplication_name="$service_name" -Dworkers="$no_of_workers" -DworkerType="$worker_type" -DobjectStore="$enable_objectstore_v2" -DapplyLatestRuntimePatch="$enable_latest_runtime" -DconnectedAppClientSecret="$connected_app_secret" -Dlistener.keystore.password="$keystore_password" -Dlistener.keystore.key.password="$keystore_key_password" -Dhttp.request.host="$http_request_host" -Dhttp.request.port="$http_request_port" -Dhttp.request.basePath="$http_request_basePath" -Dhttp.request.reconnection.frequency="$http_request_reconnection_frequency" -Dhttp.request.reconnection.attempts="$http_request_reconnection_attempts" -Dhttp.request.timeout="$http_request_timeout" -Dhttp.request.client.id="$http_request_client_id" -Dhttp.request.client.secret="$http_request_client_secret" -Dmq.client.id="$mq_client_id" -Dmq.client.secret="$mq_client_secret" -Dmq.reconnection.frequency="$mq_reconnection_frequency"  -Dmq.reconnection.attempts="$mq_reconnection_attempts" -Dmq.us.destination="$mq_us_destination" -Dmq.canada.destination="$mq_canada_destination" -Dapi.id="$api_id" -Danypoint.platform.client_id="$anypoint_platform_nabs_bg_client_id" -Danypoint.platform.client_secret="$anypoint_platform_nabs_bg_client_secret" -Danypoint.platform.config.analytics.agent.enabled="$anypoint_platform_config_analytics_agent_enabled" -Danypoint.platform.visualizer.layer="$anypoint_platform_visualizer_layer" -Denvironment="$environment" -Dsystem.time.zone="$system_time_zone" -Dservice.name="$service_name" -Ddynatrace.trace.collector.url="$dynatrace_trace_collector_url" -Ddynatrace.trace.collector.authorization="$dynatrace_trace_collector_authorization" -Ddynatrace.reconnection.attempts="$dynatrace_reconnection_attempts" -Ddynatrace.reconnection.frequency="$dynatrace_reconnection_frequency" -Dmq.url="$mq_url" -DobjectStore.ttl="$objectStore_ttl" -DobjectStore.attempts="$objectStore_attempts" -DobjectStore.frequency="$objectStore_frequency"
          
          mvn deploy -DmuleDeploy -e -Dmule.artifact=$artifactName -DmuleVersion="$mule_version" -DconnectedAppClientId="$connected_app_id" -Dbusiness_group_id="$anypoint_platform_nabs_business_grp_id" -Dregion="$region" -Dapplication_name="$service_name" -Dworkers="$no_of_workers" -DworkerType="$worker_type" -DobjectStore="$enable_objectstore_v2" -DapplyLatestRuntimePatch="$enable_latest_runtime" -DconnectedAppClientSecret="$connected_app_secret" -Dlistener.keystore.password="$keystore_password" -Dlistener.keystore.key.password="$keystore_key_password" -Dhttp.request.host="$http_request_host" -Dhttp.request.port="$http_request_port" -Dhttp.request.basePath="$http_request_basePath" -Dhttp.request.reconnection.frequency="$http_request_reconnection_frequency" -Dhttp.request.reconnection.attempts="$http_request_reconnection_attempts" -Dhttp.request.timeout="$http_request_timeout" -Dhttp.request.client.id="$http_request_client_id" -Dhttp.request.client.secret="$http_request_client_secret" -Dmq.client.id="$mq_client_id" -Dmq.client.secret="$mq_client_secret" -Dmq.reconnection.frequency="$mq_reconnection_frequency"  -Dmq.reconnection.attempts="$mq_reconnection_attempts" -Dmq.us.destination="$mq_us_destination" -Dmq.canada.destination="$mq_canada_destination" -Dapi.id="$api_id" -Danypoint.platform.client_id="$anypoint_platform_nabs_bg_client_id" -Danypoint.platform.client_secret="$anypoint_platform_nabs_bg_client_secret" -Danypoint.platform.config.analytics.agent.enabled="$anypoint_platform_config_analytics_agent_enabled" -Danypoint.platform.visualizer.layer="$anypoint_platform_visualizer_layer" -Denvironment="$environment" -Dsystem.time.zone="$system_time_zone" -Dservice.name="$service_name" -Ddynatrace.trace.collector.url="$dynatrace_trace_collector_url" -Ddynatrace.trace.collector.authorization="$dynatrace_trace_collector_authorization" -Ddynatrace.reconnection.attempts="$dynatrace_reconnection_attempts" -Ddynatrace.reconnection.frequency="$dynatrace_reconnection_frequency" -Dmq.url="$mq_url" -DobjectStore.ttl="$objectStore_ttl" -DobjectStore.attempts="$objectStore_attempts" -DobjectStore.frequency="$objectStore_frequency"  -DskipTests  
